@model IEnumerable<RDBookshopMVC.Models.Book>

@{
    ViewData["Title"] = "Books Index";
}

<h1>Books Index</h1>

<p>
    <a class="btn btn-primary" asp-action="Create">Create New Book</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ISBN)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PublishDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Author)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CoverImageUrl)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ISBN)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PublishDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Author.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CoverImageUrl)
                </td>
                <td>
                    <a class="btn btn-warning btn-sm" asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a class="btn btn-info btn-sm" asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a class="btn btn-danger btn-sm" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@if (Model.Count() == 0)
{
    <div class="alert alert-warning">
        No books found.
    </div>
}

@section Scripts {
    <script>
        // Your custom JavaScript for the Index page can go here
        console.log('Index page loaded');

        // Example: Custom script to handle category filtering (if needed)
        function filterByCategory(categoryId) {
            // Logic to filter books by category
            console.log('Filtering books by category: ' + categoryId);
        }
    </script>
}